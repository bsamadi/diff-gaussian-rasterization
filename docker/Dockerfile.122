# Use the official CUDA 12.2 base image with Ubuntu 20.04
FROM nvidia/cuda:12.2.0-devel-ubuntu20.04

# Set environment variables to avoid interactive prompts during installation
ENV DEBIAN_FRONTEND=noninteractive

# Add NVIDIA GPG key and update the package list
RUN apt-key del 7fa2af80 && \
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub && \
    apt-get update

# Update and install required dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    wget \
    build-essential \
    cmake \
    ninja-build \
    libopenblas-dev \
    libssl-dev \
    libffi-dev \
    python3-dev \
    python3-pip \
    python3-venv \
    clang-10 \
    gcc-10 g++-10 \
    && rm -rf /var/lib/apt/lists/*

# Set gcc and g++ to use the installed version 10
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 10 \
    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 10

# Set the environment variables to use CUDA
ENV CUDA_HOME=/usr/local/cuda-12.2
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}

# Set the TORCH_CUDA_ARCH_LIST to the appropriate architectures (e.g., 7.5, 8.0, etc.)
# Replace 8.0 below with the correct compute capability for your GPU.
ENV TORCH_CUDA_ARCH_LIST="8.0"

# Install Python packages
RUN pip3 install --upgrade pip setuptools wheel

# Install PyTorch with CUDA 12.2 support
RUN pip3 install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu122

# Copy the source code of the package to the container
COPY . /workspace

# Set the working directory
WORKDIR /workspace

# Install the diff-gaussian-rasterization package
RUN pip3 install --no-build-isolation .

# Set the default command to bash
CMD ["/bin/bash"]
